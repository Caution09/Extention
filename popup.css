.ui-sortable-handle {
  cursor: grab;
}

.ui-sortable-handle:active {
  cursor: grabbing;
}

.drop-area {
  border: 3px dashed #c8c8c8 !important;
  background-color: #f0f0f0 !important;
  border-radius: 5px;
  padding: 30px;
  text-align: center;
}

#popup {
  display: none;
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 9999;
  background-color: #ccc;
}

select[disabled] {
  color: #999;
  background-color: #555;
  cursor: not-allowed;
}

input[disabled] {
  color: #999;
  background-color: #555;
  cursor: not-allowed;
}

#preview-element {
  font-weight: bold;
}

.drop-area label {
  width: 100%;
  display: inline-block;
}

.drop-area label:hover {
  cursor: pointer;
}

.drop-area label input {
  display: none;
}

.drop-area label svg {
  width: 50px;
  fill: currentColor;
  color: #909090;
}

.drop-area label .preview-area {
  width: 75%;
  margin: 15px auto;
  height: 120px;
}

.drop-area label .preview-area img {
  height: 100%;
  max-width: 100%;
  width: auto;
}

input {
  font-size: 100%;
  padding-left: 0;
  padding-right: 0;
}

select {
  font-size: 100%;
  width: 96px;
  padding-left: 0;
  padding-right: 0;
}

.dropdown-container {
  display: inline-block;
}

li {
  font-size: 100%;
  text-align: left;
}

ul {
  list-style: none;
  padding-left: 0;
  padding-right: 0;
}

.promptData {
  width: 95px;
}

.resist {
  width: 90px;
  margin-left: 0;
  margin-right: 0;
  padding-left: 0;
  padding-right: 0;
}

button {
  font-size: 100%;
}

.tab-group {
  display: flex;
  justify-content: center;
  font-size: 100%;
}

.tab {
  flex-grow: 1;
  padding: 5px;
  list-style: none;
  border: solid 1px #ccc;
  text-align: center;
  cursor: pointer;
}

.panel-group {
  height: auto;
  border: solid 1px #ccc;
  border-top: none;
  background: #eee;
}

.panel {
  display: none;
}

.tab.is-active {
  background: #f00;
  color: #fff;
  transition: all 0.2s ease-out;
}

.tab.is-alert {
  background: #ff0;
  color: #000;
  transition: all 0.2s ease-out;
}

.panel.is-show {
  display: block;
}

#optionPanel {
  position: fixed;
  top: 0;
  right: -50%;
  /* パネルを非表示にする */
  width: 40%;
  height: 100vh;
  /* 画面の高さいっぱいにする */
  background-color: #fff;
  transition: right 0.3s ease-in-out;
  /* アニメーションを追加する */
}

#optionPanel.active {
  right: 0;
  /* パネルを表示する */
}

#show-panel {
  position: fixed;
  top: 0;
  right: 50px;
  margin: 20px;
  padding: 10px 20px;
  background-color: #4caf50;
  color: white;
  border: none;
  border-radius: 5px;
  font-size: 16px;
  cursor: pointer;
}

#GeneratoButton {
  position: fixed;
  top: 0;
  right: 150px;
  margin: 20px;
  padding: 10px 20px;
  background-color: #4caf50;
  color: white;
  border: none;
  border-radius: 5px;
  font-size: 16px;
  cursor: pointer;
}

#overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 9999;
  background-color: rgba(0, 0, 0, 0.5);
}

#loading {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: #fff;
  font-size: 24px;
}

.ui-sortable-helper {
  transition: none !important; /* ドラッグ中のトランジションを無効化 */
}

.ui-sortable-placeholder {
  visibility: visible !important;
  background: #f0f0f0;
  opacity: 0.5;
}

#show-shortcuts {
  position: fixed;
  top: 0;
  right: 0px; /* 180px → 20px に変更（一番右へ） */
  margin: 20px;
  padding: 10px 15px;
  background-color: #2196f3;
  color: white;
  border: none;
  border-radius: 50%;
  font-size: 16px;
  cursor: pointer;
  width: 40px;
  height: 40px;
  font-weight: bold;
}

/* ホバー効果も追加 */
#show-shortcuts:hover {
  background-color: #1976d2;
  transform: scale(1.1);
  transition: all 0.2s ease;
}

/* サイドパネルでの表示調整 */
@media (max-width: 300px) {
  body {
    width: 100%;
    min-width: unset;
  }

  input[type="text"] {
    width: calc(100% - 10px);
  }

  .promptData {
    width: 80px;
  }
}

#autoGenerateContainer {
  display: inline-block;
  margin-left: 10px;
  padding: 8px;
  border: 1px solid #ddd;
  border-radius: 4px;
  background: #f9f9f9;
}

#generateProgress {
  font-size: 12px;
  color: #666;
}

#stopGenerate {
  background: #f44336;
  color: white;
  border: none;
  padding: 4px 12px;
  border-radius: 3px;
  cursor: pointer;
}

#stopGenerate:hover {
  background: #d32f2f;
}

/* 自動Generate機能のスタイル */
#autoGenerateContainer {
  display: inline-block;
  margin-left: 10px;
  padding: 8px;
  border: 1px solid #ddd;
  border-radius: 4px;
  background: #f9f9f9;
}

#generateProgress {
  font-size: 12px;
  color: #666;
  margin-top: 5px;
}

#generateStatus {
  font-size: 11px;
  color: #888;
}

#stopGenerate {
  background: #f44336;
  color: white;
  border: none;
  padding: 4px 12px;
  border-radius: 3px;
  cursor: pointer;
}

#stopGenerate:hover {
  background: #d32f2f;
}

#generateCount {
  width: 50px;
  padding: 2px 5px;
}
/* スロットカードのスタイル */
.slot-card:hover {
  transform: translateY(-2px);
}

.slot-card textarea:focus {
  outline: none;
  border-color: #2196f3 !important;
}

.slot-name-edit:focus {
  outline: none;
  border-bottom: 2px solid #2196f3;
}

#slot-container {
  max-height: 500px;
  overflow-y: auto;
  padding-right: 5px;
}

/* 抽出表示のアニメーション */
.current-extraction-display {
  transition: all 0.3s ease;
}

.current-extraction-display > div {
  animation: highlightFade 1s ease-out;
}

@keyframes highlightFade {
  0% {
    background-color: #fffacd;
    transform: scale(1.02);
  }
  100% {
    background-color: #f5f5f5;
    transform: scale(1);
  }
}

/* タイムスタンプのスタイル */
.extraction-timestamp {
  font-size: 10px;
  color: #999;
  margin-left: 10px;
}

/* セレクター管理セクション */
#selectorManagement {
  background-color: #f9f9f9;
  border-radius: 4px;
  padding: 15px;
}

#selectorManagement h3 {
  margin-top: 0;
  margin-bottom: 15px;
  font-size: 16px;
}

#selectorManagement input[type="text"] {
  padding: 5px;
  border: 1px solid #ddd;
  border-radius: 3px;
  font-family: monospace;
  font-size: 12px;
}

#selectorManagement button {
  margin-right: 5px;
  padding: 5px 10px;
  border: 1px solid #ddd;
  border-radius: 3px;
  background: white;
  cursor: pointer;
}

#selectorManagement button:hover {
  background: #f0f0f0;
}

#promptSelectorStatus,
#generateSelectorStatus {
  min-height: 16px;
}
